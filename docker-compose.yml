name: DaniloSantanaRB2025

services:
  load-balancer:
    container_name: load-balancer
    image: nginx:latest
    ports:
      - "9999:9999"
    user: root
    volumes:
      - ./nginx/socket-permission.sh:/docker-entrypoint.d/socket-permission.sh
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx-socket:/run:rw
    depends_on:
      - api-1
      - api-2
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "15MB"

  api-1: &api-service
    container_name: api-1
    #build: .
    image: danilosantanaaa/rinha:2025.8
    expose:
      - "8080"
    ports:
      - "3001:8080"
    hostname: api-1
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__PostgreSQL=Host=/var/run/postgresql;Port=5432;Database=rinha;Username=postgres;Password=postgres;Pooling=true;Minimum Pool Size=4;Maximum Pool Size=20;Connection Pruning Interval=3
      - ConnectionStrings__RedisCache=redis:6379,abortConnect=false,connectTimeout=30000,responseTimeout=30000
      - PaymentProcessorDefault=http://payment-processor-default:8080
      - PaymentProcessorFallback=http://payment-processor-fallback:8080
      - ServerName=api_1
    depends_on:
      - postgreSQL
      - redis
    networks:
      - backend
      - payment-processor
    volumes:
      - postgres-socket:/var/run/postgresql
      - nginx-socket:/run:rw 
    deploy:
      restart_policy:
        condition: on-failure
        delay: 2s
        max_attempts: 10
        window: 5s
      resources:
        limits:
          cpus: "0.4"
          memory: "116MB"
  api-2:
    <<: *api-service
    container_name: api-2
    ports:
      - "3002:8080"
    hostname: api-2
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__PostgreSQL=Host=/var/run/postgresql;Port=5432;Database=rinha;Username=postgres;Password=postgres;Pooling=true;Minimum Pool Size=4;Maximum Pool Size=20;Connection Pruning Interval=3
      - ConnectionStrings__RedisCache=redis:6379,abortConnect=false,connectTimeout=30000,responseTimeout=30000
      - PaymentProcessorDefault=http://payment-processor-default:8080
      - PaymentProcessorFallback=http://payment-processor-fallback:8080
      - ServerName=api_2
    deploy:
      resources:
          limits:
            cpus: "0.4"
            memory: "110MB"

  redis:
    container_name: cache
    hostname: redis
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - backend
    restart: on-failure
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "9MB"

  postgreSQL:
    container_name: database
    hostname: postgreSQL
    image: postgres:17-alpine
    networks:
      - backend
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres-socket:/var/run/postgresql
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=rinha
    ports:
      - "5432:5432"
    command: > 
      postgres -c 
      checkpoint_timeout=600 -c 
      max_wal_size=4096 -c 
      synchronous_commit=0 -c 
      fsync=0 -c 
      full_page_writes=0

    deploy:
      restart_policy:
        condition: on-failure
        delay: 2s
        max_attempts: 10
        window: 5s
      resources:
        limits:
          cpus: "0.4"
          memory: "100MB"

networks:
  backend:
    name: backend
    driver: bridge
  payment-processor:
    name: payment-processor
    driver: bridge
    external: true

volumes:
  postgres-socket:
  nginx-socket: